@app.post("/stop-session", response_model=StopSessionResponse)
async def stop_session_endpoint(
    request: StopSessionRequest,
    x_user_id: str = Header(..., description="User ID to look up token from tokens.json")
):
    """Stop/kill one or more sessions"""
    user_id, token = get_user_token(x_user_id)

    try:
        # Direct API call without wrapper for testing
        url = BASE_URL + STOP_SESSION_API
        payload = json.dumps({
            "method": "stop_session",
            "kwparams": {
                "session_ids": request.session_ids,
                "force_quit": request.force_quit,
                "suspend_session": request.suspend_session
            }
        })
        
        headers = {
            'Content-Type': 'application/json',
            'Authorization': f'Bearer {token}'
        }

        response = requests.request("POST", url, headers=headers, data=payload, verify=False)
        response.raise_for_status()
        response_data = json.loads(response.text)
        
        # Debug output to see what the API actually returns
        print(f"Stop session API response: {json.dumps(response_data, indent=2)}")
        print(f"HTTP Status: {response.status_code}")

        # Check for various success indicators
        success_indicators = [
            response_data.get("result"),
            response_data.get("success"),
            response_data.get("status") == "success",
            response_data.get("message") and "success" in response_data.get("message", "").lower()
        ]

        if any(success_indicators):
            return StopSessionResponse(
                success=True,
                message=f"Successfully stopped {len(request.session_ids)} sessions",
                stopped_sessions=request.session_ids
            )
        else:
            return StopSessionResponse(
                success=False,
                message="Stop operation may have failed - check API response",
                error=f"API Response: {response_data}"
            )
            
    except requests.exceptions.RequestException as e:
        print(f"Request error: {e}")
        return StopSessionResponse(
            success=False,
            message="Failed to connect to external API",
            error=str(e)
        )
    except json.JSONDecodeError as e:
        print(f"JSON decode error: {e}")
        return StopSessionResponse(
            success=False,
            message="Invalid response from external API",
            error=str(e)
        )
    except Exception as e:
        print(f"Unexpected error: {e}")
        return StopSessionResponse(
            success=False,
            message="Failed to stop sessions",
            error=str(e)
        )
